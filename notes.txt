
The types are not defined, is not a must but it is good to specify for reducing the interpretation.
Vendors names are not specific enough + should be camelCase.
No comments on the methods.
Need to create folders Entity and Repository.
I like to put the path of the file on the first line.


DB.php
Sensitive datas are directly on the db.php file.
The variables names are not specific enough.
I prefer to use a ORM manager like doctrine. More safe and scalable.
The class name is not specific enough and doesn't respect psr-1: Class names MUST be declared in StudlyCaps.

CommentManager.php
This file is causing side effects (including files with the constructor) and declaring new symbols (The class + the methods). A file should not do both.
Not enough comments to explain this class.
This should extend comment

NewsManager.php
This file is causing side effects (including files with the constructor) and declaring new symbols (The class + the methods). A file should not do both.
Foreign keys in comments should delete on cascade. No method needed for finding and deleting all the comments linked to the news.
This should extend news

index.php
The applications constants should be placed in a separate configuration file that should be ignored by git (can also contains also the db credentials).
There is no git in this project.

sql
The charset should be utf-8 for internationalisation.
Varchar shouldn't be random numbers, the smaller the best.
created at should always have a date because it is a data that we will always have.
Comments should always have a news_id. The not null constraint is necessary.

Comment.php
No comments.
The class variables should be private. That's why the getId exists.
setId should not exist.
Typing the variables and return values makes a more robust program and gives us more control.

News.php
Same issues than Comment.php
With doctrine, it becomes very easy to recover all the comments of a news.